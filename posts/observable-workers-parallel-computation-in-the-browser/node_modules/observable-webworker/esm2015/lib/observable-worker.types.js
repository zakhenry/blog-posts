/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * \@internal
 * @record
 * @template P
 */
export function GenericWorkerMessage() { }
if (false) {
    /** @type {?} */
    GenericWorkerMessage.prototype.payload;
    /** @type {?|undefined} */
    GenericWorkerMessage.prototype.transferables;
}
/**
 * \@internal
 * @record
 * @template T
 */
export function WorkerMessageNotification() { }
if (false) {
    /** @type {?} */
    WorkerMessageNotification.prototype.data;
}
/**
 * @record
 * @template I, O
 */
export function DoWorkUnit() { }
if (false) {
    /**
     * @param {?} input
     * @return {?}
     */
    DoWorkUnit.prototype.workUnit = function (input) { };
    /**
     * @param {?} output
     * @return {?}
     */
    DoWorkUnit.prototype.selectTransferables = function (output) { };
}
/**
 * @record
 * @template I, O
 */
export function DoWork() { }
if (false) {
    /**
     * @param {?} input$
     * @return {?}
     */
    DoWork.prototype.work = function (input$) { };
    /**
     * @param {?} output
     * @return {?}
     */
    DoWork.prototype.selectTransferables = function (output) { };
}
/**
 * @record
 * @template I, O
 */
export function DoTransferableWork() { }
if (false) {
    /**
     * @param {?} output
     * @return {?}
     */
    DoTransferableWork.prototype.selectTransferables = function (output) { };
}
/**
 * @record
 * @template I, O
 */
export function DoTransferableWorkUnit() { }
if (false) {
    /**
     * @param {?} output
     * @return {?}
     */
    DoTransferableWorkUnit.prototype.selectTransferables = function (output) { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JzZXJ2YWJsZS13b3JrZXIudHlwZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vYnNlcnZhYmxlLXdlYndvcmtlci8iLCJzb3VyY2VzIjpbImxpYi9vYnNlcnZhYmxlLXdvcmtlci50eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSwwQ0FHQzs7O0lBRkMsdUNBQVc7O0lBQ1gsNkNBQStCOzs7Ozs7O0FBSWpDLCtDQUVDOzs7SUFEQyx5Q0FBc0I7Ozs7OztBQUd4QixnQ0FHQzs7Ozs7O0lBRkMscURBQWtDOzs7OztJQUNsQyxpRUFBZ0Q7Ozs7OztBQUdsRCw0QkFHQzs7Ozs7O0lBRkMsOENBQTJDOzs7OztJQUMzQyw2REFBZ0Q7Ozs7OztBQUlsRCx3Q0FFQzs7Ozs7O0lBREMseUVBQStDOzs7Ozs7QUFJakQsNENBRUM7Ozs7OztJQURDLDZFQUErQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vdGlmaWNhdGlvbiwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgaW50ZXJmYWNlIEdlbmVyaWNXb3JrZXJNZXNzYWdlPFAgPSBhbnk+IHtcbiAgcGF5bG9hZDogUDtcbiAgdHJhbnNmZXJhYmxlcz86IFRyYW5zZmVyYWJsZVtdO1xufVxuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgaW50ZXJmYWNlIFdvcmtlck1lc3NhZ2VOb3RpZmljYXRpb248VD4gZXh0ZW5kcyBNZXNzYWdlRXZlbnQge1xuICBkYXRhOiBOb3RpZmljYXRpb248VD47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRG9Xb3JrVW5pdDxJLCBPPiB7XG4gIHdvcmtVbml0KGlucHV0OiBJKTogT2JzZXJ2YWJsZTxPPjtcbiAgc2VsZWN0VHJhbnNmZXJhYmxlcz8ob3V0cHV0OiBPKTogVHJhbnNmZXJhYmxlW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRG9Xb3JrPEksIE8+IHtcbiAgd29yayhpbnB1dCQ6IE9ic2VydmFibGU8ST4pOiBPYnNlcnZhYmxlPE8+O1xuICBzZWxlY3RUcmFuc2ZlcmFibGVzPyhvdXRwdXQ6IE8pOiBUcmFuc2ZlcmFibGVbXTtcbn1cblxuLy8gc2FtZSBhcyBEb1dvcmssIGJ1dCBzZWxlY3RUcmFuc2ZlcmFibGVzIGlzIHJlcXVpcmVkXG5leHBvcnQgaW50ZXJmYWNlIERvVHJhbnNmZXJhYmxlV29yazxJLCBPPiBleHRlbmRzIERvV29yazxJLCBPPiB7XG4gIHNlbGVjdFRyYW5zZmVyYWJsZXMob3V0cHV0OiBPKTogVHJhbnNmZXJhYmxlW107XG59XG5cbi8vIHNhbWUgYXMgRG9Xb3JrVW5pdCwgYnV0IHNlbGVjdFRyYW5zZmVyYWJsZXMgaXMgcmVxdWlyZWRcbmV4cG9ydCBpbnRlcmZhY2UgRG9UcmFuc2ZlcmFibGVXb3JrVW5pdDxJLCBPPiBleHRlbmRzIERvV29ya1VuaXQ8SSwgTz4ge1xuICBzZWxlY3RUcmFuc2ZlcmFibGVzKG91dHB1dDogTyk6IFRyYW5zZmVyYWJsZVtdO1xufVxuIl19